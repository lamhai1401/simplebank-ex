# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

executors:
  docker-publisher:
    environment:
      IMAGE_NAME: lamhai141/simplebank-ex
    docker:
    - image: circleci/buildpack-deps:stretch

orbs:
  heroku: circleci/heroku@1.2.6
  codecov: codecov/codecov@1.0.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build:
    working_directory: ~/repo
    environment:
      IMAGE_NAME: lamhai141/simplebank-ex
    docker:
    - image: cimg/go:1.15.10
    resource_class: large
    parallelism: 10
    steps:
    - checkout
    - restore_cache:
        keys:
        - go-mod-v4-{{ checksum "go.sum" }}
    - run:
        name: Install Dependencies
        command: go get ./...
    - save_cache:
        key: go-mod-v4-{{ checksum "go.sum" }}
        paths:
        - /go/pkg/mod
    - run:
        name: Run all tests
        command: |
          mkdir /tmp/artifacts;
          make test-circle;
          cp -a ./coverage.html /tmp/artifacts/;
    - codecov/upload: # upload coverage file
        file: /tmp/artifacts/coverage.html
    - run:
        name: Building binary
        command: |
          go build -o simplebank;
          cp -a ./simplebank /tmp/artifacts/;
    - store_artifacts:
        path: /tmp/artifacts
    - persist_to_workspace:
        root: /tmp/artifacts/
        paths:
        - simplebank

  building_image:
    executor: docker-publisher
    working_directory: /tmp
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - run:
        name: Copy binary from /tmp/workspace/simplebank and create dockerfile
        command: |
          cp -a /tmp/workspace/simplebank ./app
          echo "FROM alpine:3.16
                WORKDIR /usr/bin
                COPY ./app ./
                EXPOSE 8080
                CMD ["app"]" > dockerfile;
    - setup_remote_docker:
        docker_layer_caching: true # DLC will explicitly cache layers here and try to avoid 
    - run:
        name: Build Docker image
        command: docker build -t $IMAGE_NAME:test .

    - run:
        name: Archive Docker image
        command: docker save -o image.tar $IMAGE_NAME

    - persist_to_workspace:
        root: .
        paths:
        - ./image.tar

  publish-tag:
    executor: docker-publisher
    steps:
    - attach_workspace:
        at: /tmp/workspace
    - setup_remote_docker
    - run:
        name: Load archived Docker image
        command: docker load -i /tmp/workspace/image.tar
    - run:
        name: Login to docker
        command: docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWD
    - run:
        name: Tag docker
        command: docker tag $IMAGE_NAME:test $IMAGE_NAME:test
    - run:
        name: Publish Docker Image to Docker Hub
        command: docker push $IMAGE_NAME:test

workflows:
  version: 2
  heroku_deploy:
    jobs:
    - build:
        filters:
          branches:
            only: staging
    - building_image:
        requires:
        - build
    - publish-tag:
        requires:
        - building_image
        filters:
          branches:
            only: staging
    - hold:
        type: approval   # <<< This key-value pair will set your workflow to a status of "On Hold"
        requires:   # We only run the "hold" job when test2 has succeeded
        - build
        - publish-tag
    - heroku/deploy-via-git:
        requires:
        - hold

    # - prod:
    #     requires:
    #       - build
    #     filters:
    #       tags:
    #         only: /^v.*/  
    # - deploy:
    #     requires:
    #       - prod
    #       - publish-tag
    #     filters:
    #       tags:
    #         only: /^v.*/
    #       branches:
    #         ignore: /.*/
